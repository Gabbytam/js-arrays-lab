/*
Exercise 1:
  - Define an empty array named foods
*/

// Exercise 1 has been completed for you...

const foods = [];

console.log('Exercise 1 Result:\n', foods);

/*
Exercise 2:
  - Add the strings 'pizza' & 'cheeseburger' to the foods array such that 'pizza' comes before 'cheeseburger'.
*/

// Complete Exercise 2 below...
foods.push('pizza', 'cheeseburger')


console.log('Exercise 2 Result:\n',  foods);

/*
Exercise 3:
  - Add the string 'taco' to the foods array so that 'taco' is the first food in the array.
*/

// Complete Exercise 3 below...
foods.unshift('taco')

console.log('Exercise 3 Result:\n', foods);

/*
Exercise 4:
  - Access the string 'pizza' (based upon its known position) in the foods array and assign to a variable named favFood.
*/

// Complete Exercise 4 below...
favFood= foods[foods.indexOf('pizza')]

console.log('Exercise 4 Result:\n', favFood);

/*
Exercise 5:
  - Insert the string 'tofu' in the foods array between 'pizza' & 'cheeseburger'
*/

// Complete Exercise 5 below...
// .splice: arguments start position, number of elements to delete, elements to add
foods.splice(2,0,'tofu')

console.log('Exercise 5 Result:\n', foods);

/*
Exercise 6:
  - Replace the string 'pizza' in the foods array with the strings 'sushi' & 'cupcake'.
*/

// Complete Exercise 6 below...
//console.log(foods.indexOf('pizza')) //finds location of pizza
foods.splice(1, 1, 'sushi', 'cupcake')

console.log('Exercise 6 Result:\n', foods);

/*
Exercise 7:
  - Use the slice method on the foods array to create a new array containing 'sushi' & 'cupcake'.
  - Assign the new array to a variable named yummy.
*/

// Complete Exercise 7 below...
var yummy= foods.slice(1,3);

console.log('Exercise 7 Result:\n', yummy);

/*
Exercise 8:
  - Using the indexOf method on the foods array, assign the index of the 'tofu' string to a variable named soyIdx.
*/

// Complete Exercise 8 below...
var soyIdx= foods.indevar soyIdx= foods.indevar soyIdx= foods.indevar soyIdx= foods.indevar soyIdx= fssign var soyIdx= foods.indevFoods thevar soyIdx= foods.indevar soyIdx= foods.indevar soyIdx= foods.indevar soyIdx= foodowing single string:
    'taco -> sushi -> cupcake -> tofu -> cheeseburger'
*/

// Compl// Compl// Compl// Compl// Compl// Compl// Compl// Compl// Compl// Compl// Compl// Comlt:\n'// Compl// Compl// Compl// Co
                                                                whether or not the foods array includes th                                          10  elow...
var hasSoup= foods.includes('soup') ;

console.log('Exercise 10 Result:\n', hasSoup);


/*
Exercise 11:
Exercise 11:
Exercise 10 Result:\n', hasSoup);
   provid   provid   provid   provid    number to a new array named odds.
  - Hint: Initialize the odds variable to  n empty array before the iteration.
*/

const nums = [100, 5, 23, 15, 21, 72, 9, 45, 66, 7, 81, 90];

// Complete Exercise 11 bel/w..// Complete E[];
 nums.forEach(function(item, index){
   if(item%2==1){
     odds.push(item);
   }

 });

console.log('Exercise 11 Result:\n', odds);

/*
Exercise 12:
  - Use the forEach method to iterate through the same nums array and add the number to arrays named fizz,   - Use the forEach method to iterate through the s Add to the fizz array if the number is evenly divisible by 3.
  - Add to the buzz array if the number is evenly divisible by 5.
  - Add to the fizzbuzz array if the number is evenly divisible by 3 & 5.
*/

// Complete Exercise 12 below...
var fizz= [];
var buzz= [];
var fizzbuzz= [];

nums.forEach(addTo);

function addTo(item){
  if  if  if  if  if  if  if  if  if  if  if  uzz.push(item);
    if(item% 3==0) {    if(item% 3==0) {    if(item%(item%5 ==0){
        buzz.push(item);
      }
    }
    else if(item%5== 0)    else if(item%5== 0)    else if(item%5== 0)    else if(item%5== 0)    else} else    else if(item%5== 0)    else if(item%5== 0)    else if(ixercise 12 Results:');
console.log('  fizz:', fizz);
console.log('  buzz:', buzz);
console.log('  fizzbuzzconsole.log('  fi*
Exercise 13:
  - Given the below numArrays array of arrays (two  - Given tl array), assign the last nested array to a variable named numList.
  - Assume you don't know how many nested arrays numArrays contains.
*/

const numArrays = [
[100, 5, 23],
[15, 21, 72, 9],
[45, 66],
[7, 81, 90]
];

// Complete Exercise 13 below...
//console.log(numArrays.length);
var numList= (numArrays.slice(numArrays.length-1,numArrays.length));

console.logconsole.logconsole.t:\n', numList);

/*
ExercisExercisExercven the above numArraExercisExercisExerce number 66 and assign to a variable named num.
*/

// Complete Exercise 14 below...

var num= numArrays[2][1];

console.log('Exercise 14 Result:\n', num);


/*
Exercise 15:
  -   -   th  - ove numArrays array, use nested forEach methods to sum up all the numbers contained within numArrays and assign to a variable named total.
  - Hint: Be sure to declare and initialize the tot  - Hint: Be sure to declareti  - Hint: / Complete Exercise 15 below...
var total= 0;

numArrays.forEanumArrays.f

function filter(item){
  item.forEach(filter2);
  function filter2(item2){
    total= total+ item2;
  }
}
/*Notes and Explanation: 
-the first forEach on numArrays calls the function filter
-filter function runs the second function, filter2, on the item using forEach(a second time) to loop through all elements of the item (item= each array element inside the array)
-item2 is each singular element within the inner arrays 
-total is computed when item2(singular elements from inner arrays) is added to total
-function is repeated due to the forEach 
-filter2 function will run entirely, meaning each item2 element is added together, and then filter1 function runs entirely
-ex. steps:
-first, 100 + 5 + 23= 128 (total)
-then, 128 + 15 + 21 + 72 + 9= 245(new total)...etc.

 const numArrays = [
 	[100, 5, 23],
 	[15, 21, 72, 9],
 	[45, 66],
 	[7, 81, 90]
 ];
*/
console.log('Exercise 15 Result:\n', total);


